# -*- coding: utf-8 -*-
"""iris data .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M15QfnTu2YqPPceeP09poZ83z4kitFsw

task: IRIS CLASSIFICATION USING ML PROJECT
"""

# Commented out IPython magic to ensure Python compatibility.
#importing essential libraries
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
# %matplotlib inline

"""loading the data set"""

columns=['sepel_length','sepel_width','petal_length','petal_width']
df=pd.read_csv('iris.data')
df.head()

"""visualize your data"""

df.describe()

#visualize the whole data
sns.pairplot(df,hue='species')

"""separate inputcolumn outputcolumn"""

data=df.values
X=data[:,0:4]
Y=data[:,4]
print(Y)

"""spilting the data into training and testing"""

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X ,Y,test_size=0.2)
print(X_train)

from sklearn.svm import SVC
model_svc=SVC()
model_svc.fit(X_train,Y_train)

"""Model1:support vector machine"""

prediction1=model_svc.predict(X_test)
        #calculate the accuracy
        from sklearn.metrics import accuracy_score
        print(accuracy_score(Y_test,prediction1)*100)
        for i in range(len(prediction1)):
          print(Y_test[i],prediction1[i])

"""Model2: Logistic regression"""

from sklearn.linear_model import LogisticRegression
        model_LR=LogisticRegression()
        model_LR.fit(X_train,Y_train)

prediction2=model_LR.predict(X_test)
        #calculate the accuracy
        from sklearn.metrics import accuracy_score
        print(accuracy_score(Y_test,prediction2)*100)
        for i in range(len(prediction2)):
          print(Y_test[i],prediction2[i])

"""Model3: Decision tree classifier

"""

from sklearn.tree import DecisionTreeClassifier
        model_ḎTC=DecisionTreeClassifier()
        model_ḎTC.fit(X_train,Y_train)

prediction3=model_svc.predict(X_test)
        #calculate the accuracy
        from sklearn.metrics import accuracy_score
        print(accuracy_score(Y_test,prediction3)*100)
        for i in range(len(prediction2)):
          print(Y_test[i],prediction2[i])

X_new=np.array([[3,2,1,0.2],[4.9,2.2,3.8,1.1],[5.3,2.5,4.6,1.9]])
         #prediction of the species from the input vector
        prediction=model_svc.predict(X_new)
        print(f"prediction of species{prediction}.")

,  classification_report
        #A detailed classification  report
        from sklearn.metrics import classification_report
        print(classification_report(Y_test,prediction2))